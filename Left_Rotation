//Java code
public static List<Integer> rotateLeft(int d, List<Integer> list) {
        List<Integer> l=list.subList(d,list.size());
        l.addAll(list.subList(0,d));
        return l;
    }

//C++ with O(N^2)

vector<int> rotateLeft(int d, vector<int> arr) {
    for(int i=0; i<d; i++)
    {
        int t=arr[0];
        for(int j=1; j<arr.size(); j++)
        {
            arr[j-1]=arr[j];
        }
        arr[arr.size()-1]=t;
    }
 return arr;
}

//c++ optimum code with O(N)
